{
	"info": {
		"_postman_id": "2cf14d30-3d7a-4e69-b1a5-0188c212f8de",
		"name": "work5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4420324"
	},
	"item": [
		{
			"name": "register1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.access_token).to.exist;\r",
							"    pm.expect(responseData.refresh_token).to.exist;\r",
							"    pm.expect(responseData.token_type).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"ivan\",\r\n  \"first_name\": \"ivan\",\r\n  \"last_name\": \"ivanov\",\r\n  \"email\": \"i@m.ru\",\r\n  \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/register/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"register",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "login1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"IDtoken\", responseData.access_token)\r",
							"\r",
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.access_token).to.exist;\r",
							"    pm.expect(responseData.refresh_token).to.exist;\r",
							"    pm.expect(responseData.token_type).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "ivan",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/login/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "auth1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.status).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{IDtoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "ivan",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/auth/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"auth",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "me1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.avatar).to.exist;\r",
							"    pm.expect(responseData.age).to.exist;\r",
							"    pm.expect(responseData.user_id).to.exist;\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{IDtoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "x-userid",
						"value": "1",
						"type": "text"
					},
					{
						"key": "x-username",
						"value": "ivan",
						"type": "text"
					},
					{
						"key": "x-email",
						"value": "i@m.ru",
						"type": "text"
					},
					{
						"key": "x-first-name",
						"value": "ivan",
						"type": "text"
					},
					{
						"key": "x-last-name",
						"value": "ivanov",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/me/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"me",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update-me1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.avatar).to.exist;\r",
							"    pm.expect(responseData.age).to.exist;\r",
							"    pm.expect(responseData.user_id).to.exist;\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{IDtoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "X-UserId",
						"value": "1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"avatar\": \"ivan1.png\",\r\n  \"age\": 22\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/me/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"me",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "me2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"IDtoken\", \"\")\r",
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.avatar).to.exist;\r",
							"    pm.expect(responseData.age).to.exist;\r",
							"    pm.expect(responseData.user_id).to.exist;\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{IDtoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-UserId",
						"value": "{{IDtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/me/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"me",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "register2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.access_token).to.exist;\r",
							"    pm.expect(responseData.refresh_token).to.exist;\r",
							"    pm.expect(responseData.token_type).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"ivan2\",\r\n  \"first_name\": \"ivan2\",\r\n  \"last_name\": \"ivanov2\",\r\n  \"email\": \"i2@m.ru\",\r\n  \"password\": \"1222\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/register/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"register",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "login2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"IDtoken\", responseData.access_token)\r",
							"\r",
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.access_token).to.exist;\r",
							"    pm.expect(responseData.refresh_token).to.exist;\r",
							"    pm.expect(responseData.token_type).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "ivan2",
							"type": "text"
						},
						{
							"key": "password",
							"value": "1222",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/login/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "me3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{IDtoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-UserId",
						"value": "{{IDtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/me/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"me",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update-me2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.avatar).to.exist;\r",
							"    pm.expect(responseData.age).to.exist;\r",
							"    pm.expect(responseData.user_id).to.exist;\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{IDtoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "X-UserId",
						"value": "1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"avatar\": \"ivan1.png\",\r\n  \"age\": 22\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/me/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"me",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "me4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData.avatar).to.exist;\r",
							"    pm.expect(responseData.age).to.exist;\r",
							"    pm.expect(responseData.user_id).to.exist;\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{IDtoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-UserId",
						"value": "{{IDtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/me/",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"me",
						""
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "IDtoken",
			"value": ""
		}
	]
}